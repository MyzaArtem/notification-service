version: '3.9'

services:
  api:
    image: ${DOCKER_REGISTRY-}api
    build:
      context: .
      dockerfile: API/Dockerfile
    ports:
      - "8080:80"  # HTTP port
      - "8443:443" # HTTPS port
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=db;Database=notifications;Username=postgres;Password=postgres
      #- ASPNETCORE_URLS=https://+:443;http://+:80
    depends_on:
      - db

  db:
    image: postgres:latest  
    environment:
      POSTGRES_DB: notifications
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432

  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: -rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648

    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    ports:
      - "15672:15672" # Management plugin port
      - "5672:5672"   # RabbitMQ port

  frontend:
    build:
      context: .
      dockerfile: ../../App/Dockerfile
    ports:
      - "4200:80" # Пробрасываем порт, который будет доступен для микрофронта 1
    environment:
      - NX_DAEMON=false
    volumes:
      - .:/app
    command: ["npx", "nx", "serve", "host", "--host", "0.0.0.0"]
    
